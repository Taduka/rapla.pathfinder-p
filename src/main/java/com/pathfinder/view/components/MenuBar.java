package com.pathfinder.view.components;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import com.pathfinder.util.translation.TranslationKeys;
import com.pathfinder.util.translation.Translator;
import com.pathfinder.util.translation.TranslatorSpec;
import com.pathfinder.view.listener.MenuBarViewListenerSpec;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.UI;

public class MenuBar extends CustomComponent implements MenuBarSpec {

	private HorizontalLayout mainLayout;
	private Button germanButton;
	private Button englishButton;
	private TranslatorSpec translator = Translator.getInstance();

	private List<MenuBarViewListenerSpec> listener = new ArrayList<MenuBarViewListenerSpec>();

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public MenuBar() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	private void buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new HorizontalLayout();
		germanButton = new Button(translator.translate(TranslationKeys.GERMAN));
		germanButton.addClickListener(new LanguageButtonClickedListener());
		englishButton = new Button(
				translator.translate(TranslationKeys.ENGLISH));
		englishButton.addClickListener(new LanguageButtonClickedListener());
		mainLayout.addComponent(germanButton);
		mainLayout.addComponent(englishButton);
	}

	@Override
	public void updateTranslations(Locale locale) {
		germanButton.setCaption(translator.translate(TranslationKeys.GERMAN));
		englishButton.setCaption(translator.translate(TranslationKeys.ENGLISH));
	}

	@Override
	public void addMenuBarListener(MenuBarViewListenerSpec listener) {
		this.listener.add(listener);
	}

	public void fireLanguageChanged(Locale locale) {
		for (MenuBarViewListenerSpec mbListener : listener) {
			mbListener.languageChanged(locale);
		}
	}

	class LanguageButtonClickedListener implements ClickListener {
		@Override
		public void buttonClick(ClickEvent event) {
			Locale locale;
			Button clickedButton = (Button) event.getSource();
			if (clickedButton == germanButton) {
				locale = Locale.GERMAN;
			} else {
				locale = Locale.ENGLISH;
			}
			UI.getCurrent().setLocale(locale);
			fireLanguageChanged(locale);
		}
	}
}
